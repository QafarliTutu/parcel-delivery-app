plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version "$springDependencyManagerVersion"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.springdoc:springdoc-openapi-ui:$springDocVersion"
	implementation "org.springdoc:springdoc-openapi-webmvc-core:$springDocVersion"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation "org.springframework.boot:spring-boot-starter-actuator:${actuatorVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.jetbrains:annotations:23.0.0'
	implementation "org.mapstruct:mapstruct:$mapstructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
}

tasks.named('test') {
	useJUnitPlatform()
}
